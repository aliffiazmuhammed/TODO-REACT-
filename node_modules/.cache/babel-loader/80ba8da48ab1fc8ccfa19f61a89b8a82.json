{"ast":null,"code":"import _toConsumableArray from \"/home/alif/projects/todo(react)/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/alif/projects/todo(react)/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/alif/projects/todo(react)/src/components/App.jsx\";\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n\nimport React from \"react\";\nfunction App() {\n  var _this = this;\n  var _React$useState = React.useState(\"\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    inputText = _React$useState2[0],\n    setinputText = _React$useState2[1];\n  var _React$useState3 = React.useState([]),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    items = _React$useState4[0],\n    setItems = _React$useState4[1];\n  function inputChange(event) {\n    var inputValue = event.target.value;\n    setinputText(inputValue);\n  }\n  function addItem() {\n    setItems(function (prevvalue) {\n      return [].concat(_toConsumableArray(prevvalue), [inputText]);\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"To-Do List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: inputChange,\n    value: inputText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: addItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Add\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, items.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 18\n      }\n    }, item);\n  }))));\n}\nexport default App;","map":{"version":3,"names":["React","App","_this","_React$useState","useState","_React$useState2","_slicedToArray","inputText","setinputText","_React$useState3","_React$useState4","items","setItems","inputChange","event","inputValue","target","value","addItem","prevvalue","concat","_toConsumableArray","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","map","item"],"sources":["/home/alif/projects/todo(react)/src/components/App.jsx"],"sourcesContent":["//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n\nimport React from \"react\";\n\nfunction App() {\n  const [inputText,setinputText] = React.useState(\"\")\n  const [items,setItems] = React.useState([]);\n  function inputChange(event){\n    const inputValue = event.target.value;\n    setinputText(inputValue);\n  }\n  function addItem(){\n    setItems((prevvalue)=>{\n      return [...prevvalue,inputText]\n    })\n  }\n\n  return (\n\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input type=\"text\" onChange={inputChange} value={inputText}/>\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n        {items.map((item)=>{\n          return <li>{item}</li>\n        })}\n          \n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,KAAA;EACb,IAAAC,eAAA,GAAiCH,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAA5CI,SAAS,GAAAF,gBAAA;IAACG,YAAY,GAAAH,gBAAA;EAC7B,IAAAI,gBAAA,GAAyBT,KAAK,CAACI,QAAQ,CAAC,EAAE,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAApCE,KAAK,GAAAD,gBAAA;IAACE,QAAQ,GAAAF,gBAAA;EACrB,SAASG,WAAWA,CAACC,KAAK,EAAC;IACzB,IAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK;IACrCT,YAAY,CAACO,UAAU,CAAC;EAC1B;EACA,SAASG,OAAOA,CAAA,EAAE;IAChBN,QAAQ,CAAC,UAACO,SAAS,EAAG;MACpB,UAAAC,MAAA,CAAAC,kBAAA,CAAWF,SAAS,IAACZ,SAAS;IAChC,CAAC,CAAC;EACJ;EAEA,oBAEEP,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB7B,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACtB7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,YAAc,CACf,CAAC,eACN7B,KAAA,CAAAsB,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnB7B,KAAA,CAAAsB,aAAA;IAAOQ,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAElB,WAAY;IAACI,KAAK,EAAEV,SAAU;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eAC7D7B,KAAA,CAAAsB,aAAA;IAAQU,OAAO,EAAEd,OAAQ;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvB7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,KAAS,CACT,CACL,CAAC,eACN7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE7B,KAAA,CAAAsB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACClB,KAAK,CAACsB,GAAG,CAAC,UAACC,IAAI,EAAG;IACjB,oBAAOlC,KAAA,CAAAsB,aAAA;MAAAE,MAAA,EAAAtB,KAAA;MAAAuB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAKK,IAAS,CAAC;EACxB,CAAC,CAEG,CACD,CACF,CAAC;AAEV;AAEA,eAAejC,GAAG"},"metadata":{},"sourceType":"module"}